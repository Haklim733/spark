services:
  spark-master:
    container_name: spark-master
    build: .
    environment:
      - SPARK_LOCAL_IP=spark-master
      - SPARK_WORKLOAD=master
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - '8080:8080'
      - '7077:7077'
      - '4040:4040'
    healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
        interval: 5s
        timeout: 3s
        retries: 3
    volumes:
      - ./scripts:/opt/spark/scripts
      - ./data:/opt/spark/data
      - ./spark-logs:/opt/spark/spark-events
    env_file:
      - .env.spark
    entrypoint: /bin/bash
    command: -c "/opt/spark/sbin/start-master.sh; tail -f /dev/null"
  spark-history-server:
    container_name: spark-history
    build: .
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./scripts:/opt/spark/scripts
      - ./data:/opt/spark/data
      - ./spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080' 
    entrypoint: /bin/bash
    command: -c "/opt/spark/sbin/start-history-server.sh  spark://spark-master:7077; tail -f /dev/null"
  worker-a:
    container_name: spark-worker-a
    build: .
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-a
    volumes:
      - ./scripts:/opt/spark/scripts
      - ./data:/opt/spark/data
      - ./spark-logs:/opt/spark/spark-events
    entrypoint: /bin/bash
    command: -c "/opt/spark/sbin/start-worker.sh  spark://spark-master:7077; tail -f /dev/null"
  rest:
    image: apache/iceberg-rest-fixture
    container_name: iceberg-rest
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      spark:
        aliases:
          - warehouse.minio
    ports:
      - 9001:9001
      - 9000:9000
    command: [ "server", "/data", "--console-address", ":9001" ]
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: |
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      set +o history;
      /usr/bin/mc admin user add minio user User@12345;
      /usr/bin/mc admin policy attach minio readwrite --user user;
      tail -f /dev/null
      "
networks:
  spark:
